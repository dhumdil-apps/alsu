/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
"use strict";
var import0 = require('@angular/forms/src/directives/reactive_directives/form_group_name');
var import1 = require('@angular/core/src/change_detection/change_detection');
var import3 = require('@angular/core/src/linker/view_utils');
var Wrapper_FormGroupName = (function () {
    function Wrapper_FormGroupName(p0, p1, p2) {
        this._changed = false;
        this.context = new import0.FormGroupName(p0, p1, p2);
        this._expr_0 = import1.UNINITIALIZED;
    }
    Wrapper_FormGroupName.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_FormGroupName.prototype.ngOnDestroy = function () {
    };
    Wrapper_FormGroupName.prototype.check_name = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.name = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_FormGroupName.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_FormGroupName.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_FormGroupName.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_FormGroupName.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_FormGroupName;
}());
exports.Wrapper_FormGroupName = Wrapper_FormGroupName;
var Wrapper_FormArrayName = (function () {
    function Wrapper_FormArrayName(p0, p1, p2) {
        this._changed = false;
        this.context = new import0.FormArrayName(p0, p1, p2);
        this._expr_0 = import1.UNINITIALIZED;
    }
    Wrapper_FormArrayName.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_FormArrayName.prototype.ngOnDestroy = function () {
        this.context.ngOnDestroy();
    };
    Wrapper_FormArrayName.prototype.check_name = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.name = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_FormArrayName.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    Wrapper_FormArrayName.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_FormArrayName.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_FormArrayName.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_FormArrayName;
}());
exports.Wrapper_FormArrayName = Wrapper_FormArrayName;
//# sourceMappingURL=form_group_name.ngfactory.js.map