/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../app/block.component';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from './block.component.css.shim';
import * as import9 from '../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import10 from '../node_modules/@angular/forms/src/directives/ng_model.ngfactory';
import * as import11 from '../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import12 from '@angular/core/src/linker/view_container';
import * as import13 from '../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import14 from '@angular/core/src/linker/element_ref';
import * as import15 from '@angular/core/src/linker/template_ref';
import * as import16 from '@angular/forms/src/directives/default_value_accessor';
import * as import17 from '@angular/forms/src/directives/control_value_accessor';
import * as import18 from '@angular/forms/src/directives/ng_model';
import * as import19 from '@angular/forms/src/directives/ng_control';
import * as import20 from '@angular/forms/src/directives/ng_control_status';
import * as import21 from '@angular/common/src/directives/ng_if';
export class Wrapper_BlockComponent {
  /*private*/ _eventHandler:Function;
  context:import0.BlockComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  constructor() {
    this._changed = false;
    this.context = new import0.BlockComponent();
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  check_block(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.block = currValue;
      this._expr_0 = currValue;
    }
  }
  check_selectedId(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.selectedId = currValue;
      this._expr_1 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_BlockComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_BlockComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.BlockComponent>;
  _BlockComponent_0_3:Wrapper_BlockComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_BlockComponent_Host0,renderType_BlockComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'block',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_BlockComponent0(this.viewUtils,this,0,this._el_0);
    this._BlockComponent_0_3 = new Wrapper_BlockComponent();
    this.compView_0.create(this._BlockComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._BlockComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.BlockComponent) && (0 === requestNodeIndex))) { return this._BlockComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._BlockComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const BlockComponentNgFactory:import7.ComponentFactory<import0.BlockComponent> = new import7.ComponentFactory<import0.BlockComponent>('block',View_BlockComponent_Host0,import0.BlockComponent);
const styles_BlockComponent:any[] = [import8.styles];
var renderType_BlockComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.Emulated,styles_BlockComponent,{});
export class View_BlockComponent0 extends import2.AppView<import0.BlockComponent> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _el_3:any;
  _text_4:any;
  _el_5:any;
  _text_6:any;
  _el_7:any;
  _DefaultValueAccessor_7_3:import9.Wrapper_DefaultValueAccessor;
  _NG_VALUE_ACCESSOR_7_4:any[];
  _NgModel_7_5:import10.Wrapper_NgModel;
  _NgControl_7_6:any;
  _NgControlStatus_7_7:import11.Wrapper_NgControlStatus;
  _text_8:any;
  _text_9:any;
  _anchor_10:any;
  /*private*/ _vc_10:import12.ViewContainer;
  _TemplateRef_10_5:any;
  _NgIf_10_6:import13.Wrapper_NgIf;
  _text_11:any;
  _el_12:any;
  _el_13:any;
  _text_14:any;
  _text_15:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_BlockComponent0,renderType_BlockComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','block'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n  ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','connect'),(null as any));
    this._el_3 = import3.createRenderElement(this.renderer,this._el_2,'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_4 = this.renderer.createText(this._el_0,'\n\n  ',(null as any));
    this._el_5 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','assign'),(null as any));
    this._text_6 = this.renderer.createText(this._el_5,'\n    ',(null as any));
    this._el_7 = import3.createRenderElement(this.renderer,this._el_5,'input',new import3.InlineArray8(6,'class','block__data','placeholder','assign','type','text'),(null as any));
    this._DefaultValueAccessor_7_3 = new import9.Wrapper_DefaultValueAccessor(this.renderer,new import14.ElementRef(this._el_7));
    this._NG_VALUE_ACCESSOR_7_4 = [this._DefaultValueAccessor_7_3.context];
    this._NgModel_7_5 = new import10.Wrapper_NgModel((null as any),(null as any),(null as any),this._NG_VALUE_ACCESSOR_7_4);
    this._NgControl_7_6 = this._NgModel_7_5.context;
    this._NgControlStatus_7_7 = new import11.Wrapper_NgControlStatus(this._NgControl_7_6);
    this._text_8 = this.renderer.createText(this._el_5,'\n  ',(null as any));
    this._text_9 = this.renderer.createText(this._el_0,'\n\n  ',(null as any));
    this._anchor_10 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_10 = new import12.ViewContainer(10,0,this,this._anchor_10);
    this._TemplateRef_10_5 = new import15.TemplateRef_(this,10,this._anchor_10);
    this._NgIf_10_6 = new import13.Wrapper_NgIf(this._vc_10.vcRef,this._TemplateRef_10_5);
    this._text_11 = this.renderer.createText(this._el_0,'\n\n  ',(null as any));
    this._el_12 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','connect'),(null as any));
    this._el_13 = import3.createRenderElement(this.renderer,this._el_12,'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_14 = this.renderer.createText(this._el_0,'\n',(null as any));
    this._text_15 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_7,new import3.InlineArray8(6,'ngModelChange',(null as any),'input',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_7));
    this._NgModel_7_5.subscribe(this,this.eventHandler(this.handleEvent_7),true);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._el_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._text_9,
      this._anchor_10,
      this._text_11,
      this._el_12,
      this._el_13,
      this._text_14,
      this._text_15
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import16.DefaultValueAccessor) && (7 === requestNodeIndex))) { return this._DefaultValueAccessor_7_3.context; }
    if (((token === import17.NG_VALUE_ACCESSOR) && (7 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_7_4; }
    if (((token === import18.NgModel) && (7 === requestNodeIndex))) { return this._NgModel_7_5.context; }
    if (((token === import19.NgControl) && (7 === requestNodeIndex))) { return this._NgControl_7_6; }
    if (((token === import20.NgControlStatus) && (7 === requestNodeIndex))) { return this._NgControlStatus_7_7.context; }
    if (((token === import15.TemplateRef) && (10 === requestNodeIndex))) { return this._TemplateRef_10_5; }
    if (((token === import21.NgIf) && (10 === requestNodeIndex))) { return this._NgIf_10_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._DefaultValueAccessor_7_3.ngDoCheck(this,this._el_7,throwOnChange);
    const currVal_7_1_0:any = this.context.block.data;
    this._NgModel_7_5.check_model(currVal_7_1_0,throwOnChange,false);
    this._NgModel_7_5.ngDoCheck(this,this._el_7,throwOnChange);
    this._NgControlStatus_7_7.ngDoCheck(this,this._el_7,throwOnChange);
    const currVal_10_0_0:any = (this.context.block.id === this.context.selectedId[1]);
    this._NgIf_10_6.check_ngIf(currVal_10_0_0,throwOnChange,false);
    this._NgIf_10_6.ngDoCheck(this,this._anchor_10,throwOnChange);
    this._vc_10.detectChangesInNestedViews(throwOnChange);
    this._NgControlStatus_7_7.checkHost(this,this,this._el_7,throwOnChange);
  }
  destroyInternal():void {
    this._vc_10.destroyNestedViews();
    this._NgModel_7_5.ngOnDestroy();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 10)) { return new View_BlockComponent1(this.viewUtils,this,10,this._anchor_10,this._vc_10); }
    return (null as any);
  }
  handleEvent_7(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_7_3.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngModelChange')) {
      const pd_sub_0:any = ((<any>(this.context.block.data = $event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
class View_BlockComponent1 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _text_6:any;
  _text_7:any;
  _el_8:any;
  _text_9:any;
  _el_10:any;
  _text_11:any;
  _text_12:any;
  _text_13:any;
  _el_14:any;
  _text_15:any;
  _el_16:any;
  _text_17:any;
  _text_18:any;
  _text_19:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_BlockComponent1,renderType_BlockComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'span',new import3.InlineArray2(2,'class','block__pointer'),(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'\n      ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_2,'i',new import3.InlineArray2(2,'class','material-icons'),(null as any));
    this._text_5 = this.renderer.createText(this._el_4,'arrow_forward',(null as any));
    this._text_6 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this._text_7 = this.renderer.createText(this._el_0,'\n\n    ',(null as any));
    this._el_8 = import3.createRenderElement(this.renderer,this._el_0,'span',new import3.InlineArray2(2,'class','block__clear-data'),(null as any));
    this._text_9 = this.renderer.createText(this._el_8,'\n      ',(null as any));
    this._el_10 = import3.createRenderElement(this.renderer,this._el_8,'i',new import3.InlineArray2(2,'class','material-icons'),(null as any));
    this._text_11 = this.renderer.createText(this._el_10,'close',(null as any));
    this._text_12 = this.renderer.createText(this._el_8,'\n    ',(null as any));
    this._text_13 = this.renderer.createText(this._el_0,'\n\n    ',(null as any));
    this._el_14 = import3.createRenderElement(this.renderer,this._el_0,'span',new import3.InlineArray2(2,'class','block__delete'),(null as any));
    this._text_15 = this.renderer.createText(this._el_14,'\n      ',(null as any));
    this._el_16 = import3.createRenderElement(this.renderer,this._el_14,'i',new import3.InlineArray2(2,'class','material-icons'),(null as any));
    this._text_17 = this.renderer.createText(this._el_16,'delete',(null as any));
    this._text_18 = this.renderer.createText(this._el_14,'\n    ',(null as any));
    this._text_19 = this.renderer.createText(this._el_0,'\n  ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_8,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_8));
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_14,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_14));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._text_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._text_12,
      this._text_13,
      this._el_14,
      this._text_15,
      this._el_16,
      this._text_17,
      this._text_18,
      this._text_19
    ]
    ),[
      disposable_0,
      disposable_1
    ]
    );
    return (null as any);
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_8(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.context.clear()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_14(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.context.remove()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}